// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  // relationMode = "prisma"
}

model User {
  id String @id @default(uuid()) @map("_id") @db.VarChar(36)
  name String
  email String @unique
  emailVerified DateTime?
  image String?
  hashedPassword String?
  createdAt DateTime @default(now())

  accounts Account[]
  products Product[]
  addresses Address[]
}

model Account {
  id String @id @default(uuid()) @map("_id") @db.VarChar(36)
  userId String
  type String
  provider String
  providerAccountId String
  refresh_token String? @db.Text
  access_token String? @db.Text
  expires_at Int?
  token_type String?
  scope String?
  id_token String? @db.Text
  sesion_state String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Address {
  id            String  @id @default(uuid()) @map("_id") @db.VarChar(36)
  userId        String  @db.VarChar(36)

  label         String  @db.VarChar(30)
  name          String  @db.VarChar(50)
  phone         String  @db.VarChar(20)
  city_district String  @db.VarChar(100)
  district      String  @db.VarChar(50)
  city_id       String  @db.VarChar(5)
  city          String  @db.VarChar(50)
  province_id   String  @db.VarChar(5)
  province      String  @db.VarChar(50)
  postal_code   String  @db.VarChar(5)
  address       String  @db.VarChar(200)
  notes         String? @db.VarChar(50)

  primary       Boolean @default(false)

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Product {
  id              String    @id @default(cuid()) @map("_id") @db.VarChar(36)
  name            String    @db.VarChar(200)
  description     String    @db.VarChar(2000)
  images          String
  price           Decimal   @db.Decimal(9, 0)
  condition       String    @db.VarChar(20)
  stock           Int       @db.UnsignedMediumInt
  weight          Int       @db.UnsignedMediumInt
  length          Int       @db.UnsignedSmallInt
  width           Int       @db.UnsignedSmallInt
  height          Int       @db.UnsignedSmallInt
  warranty        String    @db.VarChar(10)
  warranty_detail Int       @db.UnsignedSmallInt
  userId          String    @db.VarChar(36)
  createdAt       DateTime  @default(now())
  category        String    @db.VarChar(25)
  subcategory     String?   @db.VarChar(50)

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}